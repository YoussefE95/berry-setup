(defwidget session []
    (box
        :class "session"
        :orientation "vertical"
        :width 350
        :height 275
        (box
            :class "session-box"
            :orientation "horizontal"
            :space-evenly false
            (label
                :class "user-info"
                :text ""
            )
            (label
                :class "session-title"
                :text "${USER_INFO}"
            )
        )
        (box
            :class "session-box"
            :orientation "horizontal"
            :space-evenly false
            (label
                :class "os"
                :text ""
            )
            (label
                :class "session-label"
                :text "${OS}"
            )
        )
        (box
            :class "session-box"
            :orientation "horizontal"
            :space-evenly false
            (label
                :class "hypr-version"
                :text ""
            )
            (label
                :class "session-label"
                :text "Hyprland ${HYPR_VERSION}"
            )
        )
        (box
            :class "session-box"
            :orientation "horizontal"
            :space-evenly false
            (label
                :class "zsh-version"
                :text ""
            )
            (label
                :class "session-label"
                :text "${ZSH_VERSION}"
            )
        )
        (box
            :class "session-box"
            :orientation "horizontal"
            :space-evenly false
            (label
                :class "packages"
                :text ""
            )
            (label
                :class "session-label"
                :text "${PACKAGES} packages"
            )
        )
        (box
            :class "session-box"
            :orientation "horizontal"
            :space-evenly false
            (label
                :class "uptime"
                :text "󰥔"
            )
            (label
                :class "session-label"
                :text "${UPTIME}"
            )
        )
    )
)

(defwidget theme-setter []
    (box
        :class "theme-setter"
        :orientation "horizontal"
        :halign "center"
        :valign "center"
        :width 300
        :height 210
        (box
            :class "palette"
            :orientation "vertical"
            :halign "center"
            :valign "center"
            (eventbox
                :onclick `set-theme catppuccin ${MODE}`
                (label
                    :class "theme-label ${THEME == 'catppuccin' ? 'selected-theme' : ''}"
                    :text "Catppuccin"
                )
            )
            (eventbox
                :onclick `set-theme everforest ${MODE}`
                (label
                    :class "theme-label ${THEME == 'everforest' ? 'selected-theme' : ''}"
                    :text "Everforest"
                )
            )
            (eventbox
                :onclick `set-theme gruvbox ${MODE}`
                (label
                    :class "theme-label ${THEME == 'gruvbox' ? 'selected-theme' : ''}"
                    :text "Gruvbox"
                )
            )
            (eventbox
                :onclick `set-theme rosepine ${MODE}`
                (label
                    :class "theme-label ${THEME == 'rosepine' ? 'selected-theme' : ''}"
                    :text "Rose Pine"
                )
            )
        )
        (box
            :class "mode"
            :orientation "vertical"
            :halign "center"
            :valign "center"
            (eventbox
                :onclick `set-theme ${THEME} light`
                (label
                    :class "theme-label ${MODE == 'light' ? 'selected-mode' : ''}"
                    :text "Light"
                )
            )
            (eventbox
                :onclick `set-theme ${THEME}`
                (label
                    :class "theme-label ${MODE == 'medium' ? 'selected-mode' : ''}"
                    :text "Medium"
                )
            )
            (eventbox
                :onclick `set-theme ${THEME} dark`
                (label
                    :class "theme-label ${MODE == 'dark' ? 'selected-mode' : ''}"
                    :text "Dark"
                )
            )
        )
    )
)

(defwidget powermenu []
    (box
        :class "powermenu"
        :orientation "horizontal"
        (box
            :class "powermenu-box"
            (eventbox
                :class "powermenu-event"
                :onclick "poweroff"
                (label
                    :class "poweroff-icon"
                    :text "󰐥"
                )
            )
        )
        (box
            :class "powermenu-box"
            (eventbox
                :class "powermenu-event"
                :onclick "reboot"
                (label
                    :class "reboot-icon"
                    :text ""
                )
            )
        )
        (box
            :class "powermenu-box"
            (eventbox
                :class "powermenu-event"
                :onclick "hyprctl dispatch exit"
                (label
                    :class "logout-icon"
                    :text ""
                )
            )
        )
    )
)

(defwindow dashboard
    :monitor 0
    :exclusive false
    :namespace "gtk-layer-shell"
    :geometry (geometry 
        :x "0"
        :y "0"
        :anchor "center"
    )
    (box
        :class "dashboard"
        :orientation "horizontal"
        :space-evenly false
        (session)
        (box
            :orientation "vertical"
            :space-evenly false
            (theme-setter)
            (powermenu)
        )
    )
)
