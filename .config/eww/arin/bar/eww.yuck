;; **
;; ** Widgets config for EWW
;; ** Created by : @adi1090x
;; **

;; ** Variables ***********************************************************************
;; Workspace vars
(defpoll WSONE :interval "1s" `../scripts/workspace_info 1`)
(defpoll WSTWO :interval "1s" `../scripts/workspace_info 2`)
(defpoll WSTHREE :interval "1s" `../scripts/workspace_info 3`)
(defpoll WSFOUR :interval "1s" `../scripts/workspace_info 4`)

;; Fuzzy time vars
(defpoll FUZZYTIME :interval "1m" `python3 ../scripts/fuzzytime.py`)

;; Battery vars
(defpoll BATICON :interval "30s" `../scripts/battery --icon`)
(defpoll BATPERC :interval "30s" `../scripts/battery --perc`)

;; Brightness vars
(defpoll BRIGHTNESS :interval "1s" `brightnessctl -m -d intel_backlight | awk -F, '{print substr($4, 0, length($4)-1)}'`)

;; Volume vars
(defpoll VOLICON :interval "1s" `../scripts/volume --icon`)
(defpoll VOLUME :interval "1s" `../scripts/volume --get`)

;; Network
(defpoll WIFIICON :interval "10s" `../scripts/check-network --icon`)
(defpoll NETSTAT :interval "10s" `../scripts/check-network --stat`)

;; User
(defvar IMAGE "../images/profile.jpg")
(defpoll USER :interval "10m" `whoami`)

;; ** Widgets *************************************************************************

;; search
(defwidget search [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 30 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
				(button :style "background-image: url('../images/icons/search.svg');" :class "genicon" :onclick "../scripts/widget_search --search")
				(button :style "background-image: url('../images/icons/dashboard.svg');" :class "genicon" :onclick "../scripts/widget_search --menu"))))

;; workspace
(defwidget workspace [] 
		(box :class "dockbox"
			(box :class "workspacebox":orientation "h" :spacing 30 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
                (button :style "background-image: url('${WSONE}');" :class "workspaceicon" :onclick "wmctrl -s 0")
                (button :style "background-image: url('${WSTWO}');" :class "workspaceicon" :onclick "wmctrl -s 1")
                (button :style "background-image: url('${WSTHREE}');" :class "workspaceicon" :onclick "wmctrl -s 2")
                (button :style "background-image: url('${WSFOUR}');" :class "workspaceicon" :onclick "wmctrl -s 3"))))

;; system tray
(defwidget sys_tray [] 
    (box :class "dockbox" :orientation "v" :space-evenly "true")
)

(defwidget fuzzytime [] 
		(box :class "dockbox"
            (label :class "fuzzy-time" :wrap "true" :text FUZZYTIME)
		)
    )

;; system
(defwidget system [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
				(button :onclick "../scripts/widget_apps --pow"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${BATICON}');" :class "batteryicon")
							(label :class "infotext" :halign "start" :text BATPERC)))
				(button :onclick "../scripts/widget_apps --pow"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('../images/icons/brightness.svg');" :class "brightnessicon")
							(label :class "infotext" :halign "start" :text "${BRIGHTNESS}%")))
				(button :onclick "../scripts/volume --toggle"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${VOLICON}');" :class "volumeicon")
							(label :class "infotext" :halign "start" :text VOLUME)))
				(button :onclick "../scripts/widget_apps --nm"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${WIFIICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text NETSTAT)))
				(button :onclick "../sidebar/toggle_sidebar"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${IMAGE}');" :class "face")
							(label :class "infotext" :halign "start" :text USER))))))

;; ** Windows *************************************************************************

;; search
(defwindow search
           :monitor 0
           :geometry (geometry :x "10px"
                               :y "10px"
                               :width "130px"
                               :height "60px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "70px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(search))

;; workspace
(defwindow workspace
           :monitor 0
           :geometry (geometry :x "150px"
                               :y "10px"
                               :width "210px"
                               :height "60px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "70px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(workspace))

;; system tray
(defwindow sys_tray
           :monitor 0
           :geometry (geometry :x "370px"
                               :y "10px"
                               :width "230px"
                               :height "60px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "70px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(sys_tray))

(defwindow fuzzytime
           :monitor 0
           :geometry (geometry :x "0px"
                               :y "10px"
                               :width "340px"
                               :height "60px"
                               :anchor "top center")
           :stacking "fg"
           :reserve (struts :distance "70px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(fuzzytime))

;; system
(defwindow system
           :monitor 0
           :geometry (geometry :x "-10px"
                               :y "10px"
                               :width "590px"
                               :height "60px"
                               :anchor "top right")
           :stacking "fg"
           :reserve (struts :distance "70px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(system))